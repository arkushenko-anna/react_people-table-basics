{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","components/PeopplePage/PeoplePage.tsx","components/HomePage/HomePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PeoplePage","useState","people","setPeople","selectedPersonSlug","useParams","slug","useEffect","getPeopleFromServer","peopleFromServer","peopleWithParents","map","person","newPerson","mother","find","human","name","motherName","father","fatherName","length","isSelected","classNames","to","sex","born","died","HomePage","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5cc71c3d.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const { slug: selectedPersonSlug } = useParams();\n\n  useEffect(() => {\n    const getPeopleFromServer = async () => {\n      const peopleFromServer = await getPeople();\n\n      const peopleWithParents = peopleFromServer.map(person => {\n        const newPerson = { ...person };\n\n        const mother = peopleFromServer.find(human => (\n          human.name === person.motherName));\n\n        const father = peopleFromServer.find(human => (\n          human.name === person.fatherName\n        ));\n\n        if (mother) {\n          newPerson.mother = mother;\n        }\n\n        if (father) {\n          newPerson.father = father;\n        }\n\n        return newPerson;\n      });\n\n      setPeople(peopleWithParents);\n    };\n\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {people.length\n        ? (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n            <tbody>\n              {people.map(person => {\n                const isSelected = person.slug === selectedPersonSlug;\n\n                return (\n                  <tr\n                    data-cy=\"person\"\n                    className={classNames(\n                      { 'has-background-warning': isSelected },\n                    )}\n                  >\n                    <td>\n                      <Link\n                        to={`../${person.slug}`}\n                        className={classNames(\n                          { 'has-text-danger': person.sex === 'f' },\n                        )}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.mother\n                        ? (\n                          <Link\n                            to={`../${person.mother?.slug}`}\n                            className={classNames(\n                              { 'has-text-danger': person.mother.sex === 'f' },\n                            )}\n                          >\n                            {person.mother?.name}\n                          </Link>\n                        )\n                        : person.motherName || '-'}\n                    </td>\n                    <td>\n                      {person.father\n                        ? (\n                          <Link\n                            to={`../${person.father?.slug}`}\n                          >\n                            {person.father?.name}\n                          </Link>\n                        )\n                        : person.fatherName || '-'}\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n\n        )\n        : (\n          <div className=\"block\">\n            <div className=\"box table-container\">\n              <Loader />\n\n              {/* <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p> */}\n\n            </div>\n          </div>\n        )}\n    </>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './App.scss';\nimport {\n  NavLink, Navigate, Route, Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\nimport { PeoplePage } from './components/PeopplePage';\nimport { HomePage } from './components/HomePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames('navbar-item',\n              { 'has-background-grey-lighter': isActive })}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}